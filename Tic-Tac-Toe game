def display_board(board):
    """
    Displays the current state of the Tic-Tac-Toe board.
    """
    print("-------------")
    for i in range(3):
        print("| ", board[i][0], " | ", board[i][1], " | ", board[i][2], " |")
        print("-------------")

def check_winner(board, player):
    """
    Checks if the given player has won the game.
    """
    # Check rows
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] == player:
            return True
    # Check columns
    for i in range(3):
        if board[0][i] == board[1][i] == board[2][i] == player:
            return True
    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] == player:
        return True
    if board[0][2] == board[1][1] == board[2][0] == player:
        return True
    return False

def play_game():
    """
    Implements the Tic-Tac-Toe game logic.
    """
    board = [[" ", " ", " "], [" ", " ", " "], [" ", " ", " "]]
    player = "X"
    while True:
        display_board(board)
        print(f"Player {player}'s turn.")
        row = int(input("Enter row (0-2): "))
        col = int(input("Enter column (0-2): "))
        if board[row][col] != " ":
            print("That position is already taken. Try again.")
            continue
        board[row][col] = player
        if check_winner(board, player):
            display_board(board)
            print(f"Player {player} wins!")
            return
        if all(board[i][j] != " " for i in range(3) for j in range(3)):
            display_board(board)
            print("It's a tie!")
            return
        if player == "X":
            player = "O"
        else:
            player = "X"

play_game()
